# ----------------------------------------------------------------------
# META
# ----------------------------------------------------------------------

_answers_file: .copier/project.yml
_jinja_extensions:
  - copier_templates_extensions.TemplateExtensionLoader
  - extensions/context.py:DjangoNextVersion
  - extensions/context.py:SecretKey
_min_copier_version: "9.1.0"
_secret_questions:
  - django_twc_ui_token
_subdirectory: src/django_twc_project

template_version:
  default: "2024.31"
  when: false

# ----------------------------------------------------------------------
# GENERAL
# ----------------------------------------------------------------------

project_name:
  type: str
  help: What is the name of the project?
  default: "example-project"

module_name:
  type: str
  help: What is the name of the project's module?
  default: "{{ project_name.lower() |  replace('-', '_') | replace(' ', '_') | trim() }}"

docs_site_name:
  type: str
  help: What is the display name of the project? (for use in documentation)
  default: "{{ project_name.title() |  replace('-', ' ') | trim() }}"

author_name:
  type: str
  help: What is the name of the primary author/maintainer?
  validator: "{% if author_name == '' %}You must provide an name.{% endif %}"

github_owner:
  type: str
  help: Who is the GitHub owner?
  validator: "{% if github_owner == '' %}You must provide an GitHub owner.{% endif %}"

github_repo:
  type: str
  help: What is the name of the GitHub repo?
  default: "{{ project_name | trim() }}"

current_version:
  type: str
  help: What is the current version of the project?
  default: "{{ '%Y.%-m' | strftime }}.1"

# ----------------------------------------------------------------------
# VERSIONS
# ----------------------------------------------------------------------

python_version:
  type: str
  help: Which version of Python should be used?
  choices:
    - "3.8"
    - "3.9"
    - "3.10"
    - "3.11"
    - "3.12"
  default: "3.12"

django_version:
  type: str
  help: Which version of Django should be used?
  choices:
    - "3.2"
    - "4.2"
    - "5.0"
  default: "4.2"

node_version:
  type: str
  help: Which version of Node.js should be used?
  default: "20"

tailwindcss_version:
  type: str
  help: Which version of Tailwind CSS should be used?
  default: "3.4.0"

playwright_version:
  type: str
  help: Which version of Playwright should be used?
  default: "1.43.0"

# ----------------------------------------------------------------------
# DEPENDENCIES
# ----------------------------------------------------------------------

django_twc_ui_token:
  type: str
  help: What is the OAuth token for accessing the `westerveltco/django-twc-ui` repository?
  default: ""

# ----------------------------------------------------------------------
# FLY.IO
# ----------------------------------------------------------------------

fly_app_name:
  type: str
  help: What is the name of the app on Fly.io?
  default: "{{ module_name }}-{{ github_owner }}"

fly_primary_region:
  type: str
  help: What is the primary region for the app on Fly.io?
  default: "atl"

domain_name:
  type: str
  help: What is the domain name of the app?
  default: "{{ module_name }}.westervelt.com"

# ----------------------------------------------------------------------
# POSTGRES
# ----------------------------------------------------------------------

postgres_docker_image:
  type: str
  help: Which PostgreSQL Docker image should be used?
  choices:
    - "postgres"
    - "postgis/postgis"
    - "pgautoupgrade/pgautoupgrade"
  default: "postgres"

postgres_docker_version:
  type: str
  help: Which version to use for the {{ postgres_docker_image }} image?
  default: "15"

postgis_version:
  when: "{{ postgres_docker_image == 'postgis/postgis' }}"
  type: str
  help: Which version of PostGIS should be used?
  default: "3.4"

postgres_version:
  type: str
  default: "{% if postgres_docker_image == 'postgis/postgis' %}{{ postgres_docker_version }}-{{ postgis_version }}{% else %}{{ postgres_docker_version }}{% endif %}"
  when: false

postgres_uri_scheme:
  type: str
  default: "{% if postgres_docker_image == 'postgis/postgis' %}postgis{% else %}postgres{% endif %}"
  when: false

# ----------------------------------------------------------------------
# SENTRY
# ----------------------------------------------------------------------

sentry_project:
  type: str
  help: What is the name of the Sentry project?
  default: "{{ project_name }}"

sentry_org:
  type: str
  help: What is the name of the Sentry organization?
  default: "the-westervelt-company"

sentry_dsn:
  type: str
  help: What is the Sentry DSN URL?

# ----------------------------------------------------------------------
# FRONTEND
# ----------------------------------------------------------------------

include_vite:
  type: bool
  help: Include Vite as a frontend build tool?
  default: false

# ----------------------------------------------------------------------
# EMAIL
# ----------------------------------------------------------------------

default_from_email:
  type: str
  help: What email should be used for the `DEFAULT_FROM_EMAIL` Django setting?

admin_email:
  type: str
  help: What email should be used as the destination for any admin emails?

# ----------------------------------------------------------------------
# MISC
# ----------------------------------------------------------------------

include_weasyprint:
  type: bool
  help: Install WeasyPrint system packages for creating PDFs?
  default: false

use_r2:
  type: bool
  help: Use Cloudflare R2 as an alternative S3 storage backend?
  default: false

# ----------------------------------------------------------------------
# POST GENERATION TASKS
# ----------------------------------------------------------------------

_tasks:
  # run pre-commit after generation, pipe any errors to /dev/null since if a file is
  # formatted, that exits with an error and we want to continue anyway
  - "pre-commit run --all-files 2>/dev/null || echo 'Pre-commit run on all files.'"
