name: Deploy

on:
  push:
    tags:
      - "^20[0-9]+.[0-9]+$"
    branches:
      - main
  workflow_dispatch:

concurrency: production

env:
  CI: True
  FORCE_COLOR: 1

jobs:
  bumpver:
    runs-on: ubuntu-latest
    outputs:
      current_version: {% raw %}${{ steps.bumpver.outputs.current_version }}{% endraw %}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "{{ python_version }}"

      - name: Install bumpver
        run: |
          python -m pip install --upgrade pip
          python -m pip install bumpver

      - name: Configure git to push
        run: |
          git config --global user.email "actions@users.noreply.github.com"
          git config --global user.name "Automated Publisher"

      - name: Bump Version
        id: bumpver
        run: |
          bumpver update
          eval $(bumpver show --env)
          echo "{current_version}=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Push Release Build to GitHub
        run: |
          git push

  deploy:
    runs-on: ubuntu-latest
    needs: bumpver
    environment: production
    env:
      OP_SERVICE_ACCOUNT_TOKEN: {% raw %}${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}{% endraw %}
    steps:
      - uses: actions/checkout@v4

      - uses: 1password/install-cli-action@v1

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Set Fly.io deployment API token
        run: |
          echo "FLY_API_TOKEN={{"{{"}} op://fly/{{ fly_app_name }}/fly/api_token {{"}}"}}" | op inject >> $GITHUB_ENV

      - name: Stage Fly.io secrets
        run: |
          op inject -i .env.prod | xargs flyctl secrets set --stage

      - name: Deploy to Fly.io
        run: |
          flyctl deploy --remote-only --depot=false

  sentry:
    runs-on: ubuntu-latest
    needs: bumpver
    environment: production
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: 1password/load-secrets-action@v2
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: {% raw %}${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}{% endraw %}
          SENTRY_AUTH_TOKEN: "op://GitHub Actions/sentry/RELEASE_TOKEN"

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_ORG: "{{ sentry_org }}"
          SENTRY_PROJECT: "{{ sentry_project }}"
        with:
          environment: production
          version: {% raw %}${{ needs.bumpver.outputs.current_version }}{% endraw %}
