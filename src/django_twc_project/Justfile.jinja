set dotenv-load

mod copier ".just/copier.just"
mod dj ".just/django.just"
mod docker ".just/docker.just"
mod docs ".just/documentation.just"
mod node ".just/node.just"
mod pg ".just/postgres.just"
mod project ".just/project.just"
mod py ".just/python.just"

export DATABASE_URL := env_var_or_default('DATABASE_URL', '{{ postgres_uri_scheme }}://postgres:postgres@db:5432/postgres')
export VIRTUAL_ENV := env_var_or_default('VIRTUAL_ENV', '.venv')
python_dir := if os_family() == "windows" { VIRTUAL_ENV + "/Scripts" } else { VIRTUAL_ENV + "/bin" }
export python := python_dir + if os_family() == "windows" { "/python.exe" } else { "/python" }
export system_python := if os_family() == "windows" { "py.exe" } else { "python" }

# List all available commands
[private]
default:
    @just --list

# Install and update all dependencies
bootstrap:
    @just docker build
    @just py install
    @just node install

# Clean up local development environment
clean:
    @just project clean
    @just docker clean

# Open a bash shell within a specified container (default: 'app')
shell CONTAINER="app":
    @just docker run {% raw %}{{ CONTAINER }}{% endraw %} "" "/bin/bash"

# Start development server
server:
    @just docker down
    @just bootstrap
    @just docker up

# Setup local development environment
setup:
    @just clean
    @just project setup
    @just bootstrap
    @just docker start
    @just dj migrate
    @just dj createsuperuser
    @just py coverage-report
    @just py types
    @just project lint
    @just docker down

# Open a tool's interative console within a specified container (default: 'app')
console CONTAINER="app" COMMAND="":
    #!/usr/bin/env bash
    set -euo pipefail
    if [ {% raw %}{{ CONTAINER }}{% endraw %} = 'db' ]; then
        COMMAND="psql -d {% raw %}{{ DATABASE_URL }}{% endraw %}"
    elif [ "{% raw %}{{ CONTAINER }}{% endraw %}" = "node" ] || [ "{% raw %}{{ CONTAINER }}{% endraw %}" = "tailwind" ]; then
        COMMAND="node"
    elif [ "{% raw %}{{ CONTAINER }}{% endraw %}" = "app" ] || [ "{% raw %}{{ CONTAINER }}{% endraw %}" = "worker" ]; then
        COMMAND="ipython"
    fi
    [ -n "{% raw %}{{ COMMAND }}{% endraw %}" ] && COMMAND="{% raw %}{{ COMMAND }}{% endraw %}"
    COMMAND="${COMMAND:-/bin/bash}"
    just docker run {% raw %}{{ CONTAINER }}{% endraw %} "" $COMMAND

# Run all tests
test:
    @just py test
    @just py coverage-html

# Update local development environment
update:
    @just docker pull
    @just py lock
    @just node lock
    @just bootstrap
