name: Test

on:
  pull_request:
  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}

env:
  CI: true
  ENABLE_SENTRY: false
  FORCE_COLOR: 1

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:15-3.4
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgis://postgres:postgres@localhost:5432/postgres
      EMAIL_RELAY_DATABASE_URL: postgis://postgres:postgres@localhost:5432/email-relay
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: westerveltco/setup-ci-action@v0
        with:
          node-version: 20
          python-version: 3.12
          python-requirements: requirements.txt
          use-uv: true

      - name: Install system packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            libpq-dev \
            binutils \
            libproj-dev \
            gdal-bin \
            python3-gdal \
            libaio-dev \
            build-essential
          playwright install --with-deps

      - name: Run migrations
        run: |
          python manage.py migrate --skip-checks

      - name: Build staticfiles
        run: |
          python manage.py tailwind build --skip-checks
          python manage.py collectstatic --no-input --skip-checks --no-default-ignore

      # https://hynek.me/articles/ditch-codecov-python/
      - name: Run tests
        run: |
          time coverage run -m pytest --durations 10 --reverse -p no:randomly -n auto --dist loadfile
          python -m coverage html --skip-covered --skip-empty
          python -m coverage report | sed 's/^/    /' >> $GITHUB_STEP_SUMMARY
          # python -m coverage report --fail-under=100

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ github.run_id }}
          path: htmlcov
        if: ${{ failure() }}

  types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: westerveltco/setup-ci-action@v0
        with:
          python-version: 3.12
          python-requirements: requirements.txt
          use-uv: true

      - name: Install system packages
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            libpq-dev \
            binutils \
            libproj-dev \
            gdal-bin \
            python3-gdal \
            libaio-dev \
            build-essential

      - name: Run mypy
        env:
          DATABASE_URL: sqlite:///db.sqlite3
        run: |
          python -m mypy

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: westerveltco/setup-ci-action@v0
        with:
          python-version: 3.12
          python-requirements: requirements.txt
          use-uv: true

      - name: Install dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get update && sudo apt-get install -y --no-install-recommends \
            libpq-dev \
            binutils \
            libproj-dev \
            gdal-bin \
            python3-gdal \
            libaio-dev \
            build-essential

      - name: Run deployment checks
        env:
          DEBUG: False
          DATABASE_URL: sqlite:///db.sqlite3
        run: |
          python -m manage check --deploy
